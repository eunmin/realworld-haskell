/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package realworld-haskell-0.1.0.0 */
#ifndef VERSION_realworld_haskell
#define VERSION_realworld_haskell "0.1.0.0"
#endif /* VERSION_realworld_haskell */
#ifndef MIN_VERSION_realworld_haskell
#define MIN_VERSION_realworld_haskell(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_realworld_haskell */
/* package aeson-2.2.3.0 */
#ifndef VERSION_aeson
#define VERSION_aeson "2.2.3.0"
#endif /* VERSION_aeson */
#ifndef MIN_VERSION_aeson
#define MIN_VERSION_aeson(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  2 || \
  (major1) == 2 && (major2) == 2 && (minor) <= 3)
#endif /* MIN_VERSION_aeson */
/* package aeson-casing-0.2.0.0 */
#ifndef VERSION_aeson_casing
#define VERSION_aeson_casing "0.2.0.0"
#endif /* VERSION_aeson_casing */
#ifndef MIN_VERSION_aeson_casing
#define MIN_VERSION_aeson_casing(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 0)
#endif /* MIN_VERSION_aeson_casing */
/* package async-2.2.5 */
#ifndef VERSION_async
#define VERSION_async "2.2.5"
#endif /* VERSION_async */
#ifndef MIN_VERSION_async
#define MIN_VERSION_async(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  2 || \
  (major1) == 2 && (major2) == 2 && (minor) <= 5)
#endif /* MIN_VERSION_async */
/* package base-4.19.2.0 */
#ifndef VERSION_base
#define VERSION_base "4.19.2.0"
#endif /* VERSION_base */
#ifndef MIN_VERSION_base
#define MIN_VERSION_base(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  19 || \
  (major1) == 4 && (major2) == 19 && (minor) <= 2)
#endif /* MIN_VERSION_base */
/* package bcrypt-0.0.11 */
#ifndef VERSION_bcrypt
#define VERSION_bcrypt "0.0.11"
#endif /* VERSION_bcrypt */
#ifndef MIN_VERSION_bcrypt
#define MIN_VERSION_bcrypt(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  0 || \
  (major1) == 0 && (major2) == 0 && (minor) <= 11)
#endif /* MIN_VERSION_bcrypt */
/* package data-default-0.7.1.3 */
#ifndef VERSION_data_default
#define VERSION_data_default "0.7.1.3"
#endif /* VERSION_data_default */
#ifndef MIN_VERSION_data_default
#define MIN_VERSION_data_default(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  7 || \
  (major1) == 0 && (major2) == 7 && (minor) <= 1)
#endif /* MIN_VERSION_data_default */
/* package data-has-0.4.0.0 */
#ifndef VERSION_data_has
#define VERSION_data_has "0.4.0.0"
#endif /* VERSION_data_has */
#ifndef MIN_VERSION_data_has
#define MIN_VERSION_data_has(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 0)
#endif /* MIN_VERSION_data_has */
/* package directory-1.3.8.5 */
#ifndef VERSION_directory
#define VERSION_directory "1.3.8.5"
#endif /* VERSION_directory */
#ifndef MIN_VERSION_directory
#define MIN_VERSION_directory(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 8)
#endif /* MIN_VERSION_directory */
/* package errors-2.3.0 */
#ifndef VERSION_errors
#define VERSION_errors "2.3.0"
#endif /* VERSION_errors */
#ifndef MIN_VERSION_errors
#define MIN_VERSION_errors(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  3 || \
  (major1) == 2 && (major2) == 3 && (minor) <= 0)
#endif /* MIN_VERSION_errors */
/* package exceptions-0.10.7 */
#ifndef VERSION_exceptions
#define VERSION_exceptions "0.10.7"
#endif /* VERSION_exceptions */
#ifndef MIN_VERSION_exceptions
#define MIN_VERSION_exceptions(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 7)
#endif /* MIN_VERSION_exceptions */
/* package filepath-1.4.301.0 */
#ifndef VERSION_filepath
#define VERSION_filepath "1.4.301.0"
#endif /* VERSION_filepath */
#ifndef MIN_VERSION_filepath
#define MIN_VERSION_filepath(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 301)
#endif /* MIN_VERSION_filepath */
/* package generic-lens-2.2.2.0 */
#ifndef VERSION_generic_lens
#define VERSION_generic_lens "2.2.2.0"
#endif /* VERSION_generic_lens */
#ifndef MIN_VERSION_generic_lens
#define MIN_VERSION_generic_lens(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  2 || \
  (major1) == 2 && (major2) == 2 && (minor) <= 2)
#endif /* MIN_VERSION_generic_lens */
/* package http-types-0.12.4 */
#ifndef VERSION_http_types
#define VERSION_http_types "0.12.4"
#endif /* VERSION_http_types */
#ifndef MIN_VERSION_http_types
#define MIN_VERSION_http_types(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  12 || \
  (major1) == 0 && (major2) == 12 && (minor) <= 4)
#endif /* MIN_VERSION_http_types */
/* package jose-0.11 */
#ifndef VERSION_jose
#define VERSION_jose "0.11"
#endif /* VERSION_jose */
#ifndef MIN_VERSION_jose
#define MIN_VERSION_jose(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  11 || \
  (major1) == 0 && (major2) == 11 && (minor) <= 0)
#endif /* MIN_VERSION_jose */
/* package katip-0.8.8.2 */
#ifndef VERSION_katip
#define VERSION_katip "0.8.8.2"
#endif /* VERSION_katip */
#ifndef MIN_VERSION_katip
#define MIN_VERSION_katip(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  8 || \
  (major1) == 0 && (major2) == 8 && (minor) <= 8)
#endif /* MIN_VERSION_katip */
/* package lens-5.3.4 */
#ifndef VERSION_lens
#define VERSION_lens "5.3.4"
#endif /* VERSION_lens */
#ifndef MIN_VERSION_lens
#define MIN_VERSION_lens(major1,major2,minor) (\
  (major1) <  5 || \
  (major1) == 5 && (major2) <  3 || \
  (major1) == 5 && (major2) == 3 && (minor) <= 4)
#endif /* MIN_VERSION_lens */
/* package mtl-2.3.1 */
#ifndef VERSION_mtl
#define VERSION_mtl "2.3.1"
#endif /* VERSION_mtl */
#ifndef MIN_VERSION_mtl
#define MIN_VERSION_mtl(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  3 || \
  (major1) == 2 && (major2) == 3 && (minor) <= 1)
#endif /* MIN_VERSION_mtl */
/* package optics-core-0.4.1.1 */
#ifndef VERSION_optics_core
#define VERSION_optics_core "0.4.1.1"
#endif /* VERSION_optics_core */
#ifndef MIN_VERSION_optics_core
#define MIN_VERSION_optics_core(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 1)
#endif /* MIN_VERSION_optics_core */
/* package pcre-heavy-1.0.0.4 */
#ifndef VERSION_pcre_heavy
#define VERSION_pcre_heavy "1.0.0.4"
#endif /* VERSION_pcre_heavy */
#ifndef MIN_VERSION_pcre_heavy
#define MIN_VERSION_pcre_heavy(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_VERSION_pcre_heavy */
/* package postgresql-migration-0.2.1.8 */
#ifndef VERSION_postgresql_migration
#define VERSION_postgresql_migration "0.2.1.8"
#endif /* VERSION_postgresql_migration */
#ifndef MIN_VERSION_postgresql_migration
#define MIN_VERSION_postgresql_migration(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 1)
#endif /* MIN_VERSION_postgresql_migration */
/* package postgresql-simple-0.7.0.0 */
#ifndef VERSION_postgresql_simple
#define VERSION_postgresql_simple "0.7.0.0"
#endif /* VERSION_postgresql_simple */
#ifndef MIN_VERSION_postgresql_simple
#define MIN_VERSION_postgresql_simple(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  7 || \
  (major1) == 0 && (major2) == 7 && (minor) <= 0)
#endif /* MIN_VERSION_postgresql_simple */
/* package profunctors-5.6.2 */
#ifndef VERSION_profunctors
#define VERSION_profunctors "5.6.2"
#endif /* VERSION_profunctors */
#ifndef MIN_VERSION_profunctors
#define MIN_VERSION_profunctors(major1,major2,minor) (\
  (major1) <  5 || \
  (major1) == 5 && (major2) <  6 || \
  (major1) == 5 && (major2) == 6 && (minor) <= 2)
#endif /* MIN_VERSION_profunctors */
/* package realworld-haskell-0.1.0.0 */
#ifndef VERSION_realworld_haskell
#define VERSION_realworld_haskell "0.1.0.0"
#endif /* VERSION_realworld_haskell */
#ifndef MIN_VERSION_realworld_haskell
#define MIN_VERSION_realworld_haskell(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_realworld_haskell */
/* package relude-1.2.2.0 */
#ifndef VERSION_relude
#define VERSION_relude "1.2.2.0"
#endif /* VERSION_relude */
#ifndef MIN_VERSION_relude
#define MIN_VERSION_relude(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 2)
#endif /* MIN_VERSION_relude */
/* package resource-pool-0.4.0.0 */
#ifndef VERSION_resource_pool
#define VERSION_resource_pool "0.4.0.0"
#endif /* VERSION_resource_pool */
#ifndef MIN_VERSION_resource_pool
#define MIN_VERSION_resource_pool(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 0)
#endif /* MIN_VERSION_resource_pool */
/* package safe-0.3.21 */
#ifndef VERSION_safe
#define VERSION_safe "0.3.21"
#endif /* VERSION_safe */
#ifndef MIN_VERSION_safe
#define MIN_VERSION_safe(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 21)
#endif /* MIN_VERSION_safe */
/* package safe-exceptions-0.1.7.4 */
#ifndef VERSION_safe_exceptions
#define VERSION_safe_exceptions "0.1.7.4"
#endif /* VERSION_safe_exceptions */
#ifndef MIN_VERSION_safe_exceptions
#define MIN_VERSION_safe_exceptions(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 7)
#endif /* MIN_VERSION_safe_exceptions */
/* package scotty-0.22 */
#ifndef VERSION_scotty
#define VERSION_scotty "0.22"
#endif /* VERSION_scotty */
#ifndef MIN_VERSION_scotty
#define MIN_VERSION_scotty(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  22 || \
  (major1) == 0 && (major2) == 22 && (minor) <= 0)
#endif /* MIN_VERSION_scotty */
/* package time-1.12.2 */
#ifndef VERSION_time
#define VERSION_time "1.12.2"
#endif /* VERSION_time */
#ifndef MIN_VERSION_time
#define MIN_VERSION_time(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  12 || \
  (major1) == 1 && (major2) == 12 && (minor) <= 2)
#endif /* MIN_VERSION_time */
/* package ulid-0.3.3.0 */
#ifndef VERSION_ulid
#define VERSION_ulid "0.3.3.0"
#endif /* VERSION_ulid */
#ifndef MIN_VERSION_ulid
#define MIN_VERSION_ulid(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 3)
#endif /* MIN_VERSION_ulid */
/* package unliftio-core-0.2.1.0 */
#ifndef VERSION_unliftio_core
#define VERSION_unliftio_core "0.2.1.0"
#endif /* VERSION_unliftio_core */
#ifndef MIN_VERSION_unliftio_core
#define MIN_VERSION_unliftio_core(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 1)
#endif /* MIN_VERSION_unliftio_core */
/* package wai-3.2.4 */
#ifndef VERSION_wai
#define VERSION_wai "3.2.4"
#endif /* VERSION_wai */
#ifndef MIN_VERSION_wai
#define MIN_VERSION_wai(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  2 || \
  (major1) == 3 && (major2) == 2 && (minor) <= 4)
#endif /* MIN_VERSION_wai */
/* package wai-extra-3.1.16 */
#ifndef VERSION_wai_extra
#define VERSION_wai_extra "3.1.16"
#endif /* VERSION_wai_extra */
#ifndef MIN_VERSION_wai_extra
#define MIN_VERSION_wai_extra(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  1 || \
  (major1) == 3 && (major2) == 1 && (minor) <= 16)
#endif /* MIN_VERSION_wai_extra */
/* package with-utf8-1.1.0.0 */
#ifndef VERSION_with_utf8
#define VERSION_with_utf8 "1.1.0.0"
#endif /* VERSION_with_utf8 */
#ifndef MIN_VERSION_with_utf8
#define MIN_VERSION_with_utf8(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_with_utf8 */

/* tool alex-3.5.3.0 */
#ifndef TOOL_VERSION_alex
#define TOOL_VERSION_alex "3.5.3.0"
#endif /* TOOL_VERSION_alex */
#ifndef MIN_TOOL_VERSION_alex
#define MIN_TOOL_VERSION_alex(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  5 || \
  (major1) == 3 && (major2) == 5 && (minor) <= 3)
#endif /* MIN_TOOL_VERSION_alex */
/* tool gcc-17.0.0 */
#ifndef TOOL_VERSION_gcc
#define TOOL_VERSION_gcc "17.0.0"
#endif /* TOOL_VERSION_gcc */
#ifndef MIN_TOOL_VERSION_gcc
#define MIN_TOOL_VERSION_gcc(major1,major2,minor) (\
  (major1) <  17 || \
  (major1) == 17 && (major2) <  0 || \
  (major1) == 17 && (major2) == 0 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_gcc */
/* tool ghc-9.8.4 */
#ifndef TOOL_VERSION_ghc
#define TOOL_VERSION_ghc "9.8.4"
#endif /* TOOL_VERSION_ghc */
#ifndef MIN_TOOL_VERSION_ghc
#define MIN_TOOL_VERSION_ghc(major1,major2,minor) (\
  (major1) <  9 || \
  (major1) == 9 && (major2) <  8 || \
  (major1) == 9 && (major2) == 8 && (minor) <= 4)
#endif /* MIN_TOOL_VERSION_ghc */
/* tool ghc-pkg-9.8.4 */
#ifndef TOOL_VERSION_ghc_pkg
#define TOOL_VERSION_ghc_pkg "9.8.4"
#endif /* TOOL_VERSION_ghc_pkg */
#ifndef MIN_TOOL_VERSION_ghc_pkg
#define MIN_TOOL_VERSION_ghc_pkg(major1,major2,minor) (\
  (major1) <  9 || \
  (major1) == 9 && (major2) <  8 || \
  (major1) == 9 && (major2) == 8 && (minor) <= 4)
#endif /* MIN_TOOL_VERSION_ghc_pkg */
/* tool haddock-2.30.0 */
#ifndef TOOL_VERSION_haddock
#define TOOL_VERSION_haddock "2.30.0"
#endif /* TOOL_VERSION_haddock */
#ifndef MIN_TOOL_VERSION_haddock
#define MIN_TOOL_VERSION_haddock(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  30 || \
  (major1) == 2 && (major2) == 30 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_haddock */
/* tool happy-2.0.2 */
#ifndef TOOL_VERSION_happy
#define TOOL_VERSION_happy "2.0.2"
#endif /* TOOL_VERSION_happy */
#ifndef MIN_TOOL_VERSION_happy
#define MIN_TOOL_VERSION_happy(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  0 || \
  (major1) == 2 && (major2) == 0 && (minor) <= 2)
#endif /* MIN_TOOL_VERSION_happy */
/* tool hpc-0.69 */
#ifndef TOOL_VERSION_hpc
#define TOOL_VERSION_hpc "0.69"
#endif /* TOOL_VERSION_hpc */
#ifndef MIN_TOOL_VERSION_hpc
#define MIN_TOOL_VERSION_hpc(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  69 || \
  (major1) == 0 && (major2) == 69 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_hpc */
/* tool hsc2hs-0.68.10 */
#ifndef TOOL_VERSION_hsc2hs
#define TOOL_VERSION_hsc2hs "0.68.10"
#endif /* TOOL_VERSION_hsc2hs */
#ifndef MIN_TOOL_VERSION_hsc2hs
#define MIN_TOOL_VERSION_hsc2hs(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  68 || \
  (major1) == 0 && (major2) == 68 && (minor) <= 10)
#endif /* MIN_TOOL_VERSION_hsc2hs */
/* tool pkg-config-2.5.0 */
#ifndef TOOL_VERSION_pkg_config
#define TOOL_VERSION_pkg_config "2.5.0"
#endif /* TOOL_VERSION_pkg_config */
#ifndef MIN_TOOL_VERSION_pkg_config
#define MIN_TOOL_VERSION_pkg_config(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  5 || \
  (major1) == 2 && (major2) == 5 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_pkg_config */
/* tool runghc-9.8.4 */
#ifndef TOOL_VERSION_runghc
#define TOOL_VERSION_runghc "9.8.4"
#endif /* TOOL_VERSION_runghc */
#ifndef MIN_TOOL_VERSION_runghc
#define MIN_TOOL_VERSION_runghc(major1,major2,minor) (\
  (major1) <  9 || \
  (major1) == 9 && (major2) <  8 || \
  (major1) == 9 && (major2) == 8 && (minor) <= 4)
#endif /* MIN_TOOL_VERSION_runghc */

#ifndef CURRENT_COMPONENT_ID
#define CURRENT_COMPONENT_ID "realworld-haskell-0.1.0.0-3K5zCIc1HlF6GjzJqEh9IU-realworld-haskell-exe"
#endif /* CURRENT_COMPONENT_ID */
#ifndef CURRENT_PACKAGE_VERSION
#define CURRENT_PACKAGE_VERSION "0.1.0.0"
#endif /* CURRENT_PACKAGE_VERSION */

#undef CURRENT_PACKAGE_KEY
#undef CURRENT_COMPONENT_ID
